import pandas as pd
import os
import glob
from datetime import datetime

RAW_PATH = "data/raw/"
PROCESSED_PATH = "data/processed/"

def load_client_data(client_id):
    """–ó–∞–≥—Ä—É–∂–∞–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏ –ø–µ—Ä–µ–≤–æ–¥—ã –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞"""
    transactions_file = os.path.join(RAW_PATH, f"client_{client_id}_transactions_3m.csv")
    transfers_file = os.path.join(RAW_PATH, f"client_{client_id}_transfers_3m.csv")

    if not os.path.exists(transactions_file) or not os.path.exists(transfers_file):
        print(f"‚ö†Ô∏è –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {client_id}")
        return None, None

    transactions = pd.read_csv(transactions_file)
    transfers = pd.read_csv(transfers_file)
    return transactions, transfers


def extract_features(client_id, transactions, transfers):
    """–ò–∑–≤–ª–µ–∫–∞–µ–º –ø—Ä–∏–∑–Ω–∞–∫–∏ –∫–ª–∏–µ–Ω—Ç–∞"""
    features = {"client_id": client_id}

    # –û–±—â–∏–µ —Ä–∞—Å—Ö–æ–¥—ã
    features["total_spent"] = transactions["amount"].sum()

    # –°—Ä–µ–¥–Ω–∏–π —á–µ–∫
    features["avg_transaction"] = transactions["amount"].mean()

    # –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    features["num_transactions"] = transactions.shape[0]

    # –†–∞—Å—Ö–æ–¥—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º (—á–∏—Å—Ç–∏–º –Ω–∞–∑–≤–∞–Ω–∏—è –∫–æ–ª–æ–Ω–æ–∫)
    cat_sum = transactions.groupby("category")["amount"].sum().to_dict()
    for cat, value in cat_sum.items():
        col_name = f"spent_{cat.replace(' ', '_')}"
        features[col_name] = value

    # –ü–µ—Ä–µ–≤–æ–¥—ã
    if "direction" in transfers.columns:
        transfers["direction"] = transfers["direction"].str.lower()
        incoming = transfers[transfers["direction"] == "in"]["amount"].sum()
        outgoing = transfers[transfers["direction"] == "out"]["amount"].sum()
        features["transfers_in"] = incoming
        features["transfers_out"] = outgoing

    return features


def run_features():
    print("üöÄ –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –¥–ª—è –≤—Å–µ—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤...")

    # –∏—â–µ–º –≤—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã
    transaction_files = glob.glob(os.path.join(RAW_PATH, "client_*_transactions_3m.csv"))
    client_ids = [os.path.basename(f).split("_")[1] for f in transaction_files]

    all_features = []

    for client_id in client_ids:
        transactions, transfers = load_client_data(client_id)
        if transactions is not None and transfers is not None:
            features = extract_features(client_id, transactions, transfers)
            all_features.append(features)
            print(f"‚úÖ –ö–ª–∏–µ–Ω—Ç {client_id} –æ–±—Ä–∞–±–æ—Ç–∞–Ω")

    # —Å–æ—Ö—Ä–∞–Ω—è–µ–º –≤ –æ–±—â–∏–π —Ñ–∞–π–ª
    if all_features:
        df = pd.DataFrame(all_features)
        os.makedirs(PROCESSED_PATH, exist_ok=True)

        # –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ–∞–π–ª
        output_file = os.path.join(PROCESSED_PATH, "clients_features.csv")

        # –∞—Ä—Ö–∏–≤–Ω–∞—è –∫–æ–ø–∏—è —Å –¥–∞—Ç–æ–π
        timestamp = datetime.now().strftime("%Y%m%d_%H%M%S")
        archive_file = os.path.join(PROCESSED_PATH, f"clients_features_{timestamp}.csv")

        # –µ—Å–ª–∏ —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç ‚Äî —É–¥–∞–ª—è–µ–º –ø–µ—Ä–µ–¥ –∑–∞–ø–∏—Å—å—é
        if os.path.exists(output_file):
            os.remove(output_file)

        df.to_csv(output_file, index=False)
        df.to_csv(archive_file, index=False)

        print(f"üìÑ –§–∞–π–ª clients_features.csv —Å–æ—Ö—Ä–∞–Ω—ë–Ω: {output_file}")
        print(f"üóÑ –ê—Ä—Ö–∏–≤–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞: {archive_file}")
    else:
        print("‚ö†Ô∏è –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç–æ–≤ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏")


if __name__ == "__main__":
    run_features()
