import pandas as pd
import os
import sys

PROCESSED_PATH = "data/processed/clients_full.csv"
REPORTS_DIR = "reports/"

def load_data():
    """–ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ø–æ –≤—Å–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º"""
    if not os.path.exists(PROCESSED_PATH):
        raise FileNotFoundError(f"‚ùå –§–∞–π–ª {PROCESSED_PATH} –Ω–µ –Ω–∞–π–¥–µ–Ω. –°–Ω–∞—á–∞–ª–∞ –∑–∞–ø—É—Å—Ç–∏ merge_data.py")
    return pd.read_csv(PROCESSED_PATH)


def define_segment(features: dict):
    """–û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å–µ–≥–º–µ–Ω—Ç –∫–ª–∏–µ–Ω—Ç–∞"""
    if features.get("spent_–ü—É—Ç–µ—à–µ—Å—Ç–≤–∏—è", 0) > 100000:
        return "–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫"
    elif features.get("spent_–ö–∞—Ñ–µ –∏ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã", 0) > 80000:
        return "–ì—É—Ä–º–∞–Ω"
    elif features.get("spent_–¢–∞–∫—Å–∏", 0) > 40000:
        return "–ê–∫—Ç–∏–≤–Ω—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω"
    elif features.get("spent_–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è", 0) > 100000:
        return "–î–æ–º–æ—Å–µ–¥"
    else:
        return "–ë–∞–∑–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç"


def generate_recommendations(segment: str):
    """–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–µ–≥–º–µ–Ω—Ç—É"""
    recs = []

    if segment == "–ü—É—Ç–µ—à–µ—Å—Ç–≤–µ–Ω–Ω–∏–∫":
        recs.append("Travel-–∫–∞—Ä—Ç–∞ —Å –∫–µ—à–±—ç–∫–æ–º –Ω–∞ –±–∏–ª–µ—Ç—ã –∏ –æ—Ç–µ–ª–∏")
        recs.append("–°—Ç—Ä–∞—Ö–æ–≤–∫–∞ –¥–ª—è –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–π")
        recs.append("–ö–∞—Ä—Ç–∞ –¥–ª—è –≤—ã–≥–æ–¥–Ω—ã—Ö –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–π –≤–∞–ª—é—Ç")

    elif segment == "–ì—É—Ä–º–∞–Ω":
        recs.append("–ö–∞—Ä—Ç–∞ —Å –∫–µ—à–±—ç–∫–æ–º –Ω–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω—ã –∏ –∫–∞—Ñ–µ")
        recs.append("–£—á–∞—Å—Ç–∏–µ –≤ –ø—Ä–æ–≥—Ä–∞–º–º–µ –ª–æ—è–ª—å–Ω–æ—Å—Ç–∏ —Å —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∞–º–∏-–ø–∞—Ä—Ç–Ω—ë—Ä–∞–º–∏")

    elif segment == "–ê–∫—Ç–∏–≤–Ω—ã–π –≥–æ—Ä–æ–∂–∞–Ω–∏–Ω":
        recs.append("–ö–∞—Ä—Ç–∞ —Å –∫–µ—à–±—ç–∫–æ–º –Ω–∞ —Ç–∞–∫—Å–∏ –∏ —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç")
        recs.append("–°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –Ω–∞ –≥–æ—Ä–æ–¥—Å–∫–∏–µ —Å–µ—Ä–≤–∏—Å—ã")

    elif segment == "–î–æ–º–æ—Å–µ–¥":
        recs.append("–ö–∞—Ä—Ç–∞ —Å –∫–µ—à–±—ç–∫–æ–º –Ω–∞ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç—ã –∏ –æ–Ω–ª–∞–π–Ω-–ø–æ–∫—É–ø–∫–∏")
        recs.append("–ü—Ä–æ–≥—Ä–∞–º–º—ã –±–æ–Ω—É—Å–æ–≤ –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫ (–∫–∏–Ω–æ, –∏–≥—Ä—ã)")

    else:
        recs.append("–ë–∞–∑–æ–≤—ã–π –ø–∞–∫–µ—Ç —É—Å–ª—É–≥")
        recs.append("–ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø—Ä–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏")

    return recs


def save_report(client_code, segment, recs):
    """–°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –≤ markdown-—Ñ–∞–π–ª –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –∫–ª–∏–µ–Ω—Ç–∞"""
    os.makedirs(REPORTS_DIR, exist_ok=True)
    file_path = os.path.join(REPORTS_DIR, f"client_{client_code}_recs.md")

    with open(file_path, "w", encoding="utf-8") as f:
        f.write(f"# Recommendations Report ‚Äî Client {client_code}\n\n")
        f.write(f"**–°–µ–≥–º–µ–Ω—Ç –∫–ª–∏–µ–Ω—Ç–∞:** {segment}\n\n")
        f.write("**–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:**\n")
        for i, r in enumerate(recs, 1):
            f.write(f"{i}. {r}\n")

    print(f"üìÑ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {file_path}")


def run_recommender(client_code):
    df = load_data()

    if client_code not in df["client_code"].values:
        print(f"‚ùå –ö–ª–∏–µ–Ω—Ç {client_code} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –¥–∞–Ω–Ω—ã—Ö")
        return

    client = df[df["client_code"] == client_code].iloc[0].to_dict()
    segment = define_segment(client)
    recs = generate_recommendations(segment)

    print("‚úÖ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞:")
    print(f"–ò–º—è: {client.get('name', '-')}, –ì–æ—Ä–æ–¥: {client.get('city', '-')}")
    print(f"–°–µ–≥–º–µ–Ω—Ç: {segment}")
    for i, r in enumerate(recs, 1):
        print(f"{i}. {r}")

    save_report(client_code, segment, recs)


if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ –∞—Ä–≥—É–º–µ–Ω—Ç –≤ –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ
    if len(sys.argv) > 1:
        try:
            client_code = int(sys.argv[1])
            run_recommender(client_code)
        except ValueError:
            print("‚ùå –û—à–∏–±–∫–∞: client_code –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —á–∏—Å–ª–æ–º")
    else:
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python src/recommender.py <client_code>")
        print("–ü—Ä–∏–º–µ—Ä: python src/recommender.py 1")
